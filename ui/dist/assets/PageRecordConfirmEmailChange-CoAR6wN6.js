import{p as Q,a as R,l as S,M as W,e as Y,i as B,F as K,P as N,h as m,H as T,d as a,m as v,w as o,f as _,j as r,y as H,k as b,n as U,o as V,J as X,u as k,v as Z,x as aa,z as ea,A as sa,s as l,Q as ta,g as ra,b as na,O as oa,L as la,E as J,G as ia}from"./index-D9eWXP5c.js";var ca=_('<div class="alert alert-success"><div class="icon"><i class="ri-checkbox-circle-line"></i></div> <div class="content txt-bold"><p>Successfully changed the user email address.</p> <p>You can now sign in with your new email address.</p></div></div> <button type="button" class="btn btn-transparent btn-block">Close</button>',1),da=_('to <strong class="txt-nowrap"> </strong>',1),ua=_('<label>Password</label> <input type="password" required/>',1),fa=_('<form><div class="content txt-center m-b-base"><h5>Type your password to confirm changing your email address <!></h5></div> <!> <button type="submit"><span class="txt">Confirm new email</span></button></form>');function ma(L,x){Q(x,!1);const g=v();let i=R(x,"params",8),h=v(""),n=v(!1),C=v(!1);async function $(){if(a(n))return;l(n,!0);const w=new ta("../");try{const c=ra(i()?.token);await w.collection(c.collectionId).confirmEmailChange(i()?.token,a(h)),l(C,!0)}catch(c){na.error(c)}l(n,!1)}S(()=>W(i()),()=>{l(g,oa.getJWTPayload(i()?.token).newEmail||"")}),Y(),B(),K(L,{nobranding:!0,children:(w,c)=>{var P=N(),j=m(P);{var z=s=>{var t=ca(),d=r(m(t),2);H("click",d,()=>window.close()),o(s,t)},A=s=>{var t=fa(),d=b(t),D=b(d),G=r(b(D));{var M=e=>{var u=da(),f=r(m(u)),p=b(f);k(()=>la(p,a(g))),o(e,u)};T(G,e=>{a(g)&&e(M)})}var q=r(d,2);U(q,{class:"form-field required",name:"password",children:V,$$slots:{default:(e,u)=>{const f=ia(()=>u.uniqueId);var p=ua(),I=m(p),y=r(I,2);X(y,!0),k(()=>{J(I,"for",a(f)),J(y,"id",a(f))}),Z(y,()=>a(h),O=>l(h,O)),o(e,p)}}});var E=r(q,2);let F;k(e=>{F=aa(E,1,"btn btn-lg btn-block",null,F,e),E.disabled=a(n)},[()=>({"btn-loading":a(n)})]),H("submit",t,ea($)),o(s,t)};T(j,s=>{a(C)?s(z):s(A,!1)})}o(w,P)},$$slots:{default:!0}}),sa()}export{ma as default};
